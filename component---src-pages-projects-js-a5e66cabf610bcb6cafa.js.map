{"version":3,"sources":["webpack:///./src/pages/projects.js"],"names":["Content","ArticleDate","MarkerHeader","ProjectsPage","data","title","allMarkdownRemark","edges","filter","rawDate","node","frontmatter","Date","map","key","id","style","width","margin","padding","border","borderColor","borderStyle","to","path","css","date","end_date","excerpt","query"],"mappings":"sNASMA,EAAO,0HAMPC,EAAW,8FAKXC,EAAY,2J,GAMD,8F,8DAsCFC,UAjCM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACnB,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,aACX,YAACL,EAAD,KACI,kCACCI,EAAKE,kBAAkBC,MACrBC,QAAO,YAAe,IACfC,EADc,EAAXC,KACYC,YAAYF,QAEjC,OADa,IAAIG,KAAKH,GACR,IAAIG,QAEnBC,KAAI,gBAAGH,EAAH,EAAGA,KAAH,OACH,mBAAKI,IAAKJ,EAAKK,GAAIC,MAAO,CAACC,MAAO,OAAQC,OAAQ,SAAUC,QAAS,OAAQC,OAAQ,MAAOC,YAAa,6BAA8BC,YAAa,UAClJ,YAAC,OAAD,CACEC,GAAIb,EAAKC,YAAYa,KACrBC,IAAG,GAKH,YAACvB,EAAD,KAAeQ,EAAKC,YAAYN,QAElC,uBACJ,YAACJ,EAAD,KAAcS,EAAKC,YAAYe,KAA/B,MAAwChB,EAAKC,YAAYgB,WAGrD,qBAAIjB,EAAKkB,gBAShB,IAAMC,EAAK","file":"component---src-pages-projects-js-a5e66cabf610bcb6cafa.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst ArticleDate = styled.h5`\n  display: inline;\n  color: #606060;\n`\n\nconst MarkerHeader = styled.h3`\n  display: inline;\n  background-color: var(--blog-title-background);\n  color: var(--blog-title-font)\n`\n\nconst ReadingTime = styled.h5`\n  display: inline;\n  color: #606060;\n`\n\nconst ProjectsPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Projects\" />\n    <Content>\n        <h1>Projects</h1>\n        {data.allMarkdownRemark.edges\n          .filter(({ node }) => {\n            const rawDate = node.frontmatter.rawDate\n            const date = new Date(rawDate)\n            return date < new Date()\n          })\n          .map(({ node }) => (\n            <div key={node.id} style={{width: '100%', margin: '0.5rem', padding: '1rem', border: '1px', borderColor: 'var(--background-secondry)', borderStyle: 'solid'}}>\n              <Link\n                to={node.frontmatter.path}\n                css={css`\n                  text-decoration: none;\n                  color: inherit;\n                `}\n              >\n                <MarkerHeader>{node.frontmatter.title}</MarkerHeader>\n              </Link>\n              <div>\n          <ArticleDate>{node.frontmatter.date} - {node.frontmatter.end_date}</ArticleDate>\n                {/* <ReadingTime> - {node.fields.readingTime.text}</ReadingTime> */}\n              </div>\n              <p>{node.excerpt}</p>\n            </div>\n          ))}\n      </Content>\n  </Layout>\n)\n\nexport default ProjectsPage\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { eq: false }, type: {eq: \"project\"} } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            end_date(formatString: \"DD MMMM, YYYY\")\n            rawDate: date\n            path\n          }\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}